apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'eu.xenit.docker'
apply plugin: 'eu.xenit.docker-compose.auto'

ext {
    solrVersion = '6.6.5'
    assVersion = '2.0.6'
    solrBaseImage = 'docker.io/xenit/alfresco-solr6-xenit:2.0.6'
    alfrescoimage = 'docker.io/xenit/alfresco-repository-community:7.3.0'
    flavor = 'solr6'
}


description = "Solr ${flavor} with backup"

configurations {
    backupJar
}

dependencies {
    backupJar project(path: ":solr-backup")

    testImplementation "io.rest-assured:rest-assured:${restAssuredVersion}"
    testImplementation "io.rest-assured:json-path:${restAssuredVersion}"
    testImplementation "io.rest-assured:rest-assured-common:${restAssuredVersion}"
    testImplementation "org.junit.jupiter:junit-jupiter-engine:${junitJupiterVersion}"
    testImplementation "org.junit.jupiter:junit-jupiter-params:${junitJupiterVersion}"
    testImplementation "org.awaitility:awaitility:${awaitablityVersion}"

    testImplementation platform("com.amazonaws:aws-java-sdk-bom:${amazonVersion}")

    testImplementation('com.amazonaws:aws-java-sdk-core')
    testImplementation('com.amazonaws:aws-java-sdk-s3')
    testImplementation("com.amazonaws:aws-java-sdk-sts")

    testRuntimeOnly "org.glassfish.jaxb:jaxb-runtime:${jaxBVersion}"
}
test {
    useJUnitPlatform()
}

createDockerFile {
    from "${solrBaseImage}"

    dependsOn(configurations.backupJar)

    if (flavor == "solr6") {
        smartCopy "${project.projectDir}/src/test/resources/solr.xml", "/opt/alfresco-search-services/solrhome/solr.xml"
        smartCopy configurations.backupJar, "/opt/alfresco-search-services/solrhome/lib/"
    }
}

dockerCompose {
    environment.put 'ALFRESCO_IMAGE', project.alfrescoimage
    useComposeFiles = [
            "${project.projectDir}/src/test/resources/compose/docker-compose.yml"
    ]
        isRequiredBy(project.tasks.test)
}
