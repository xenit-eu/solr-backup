apply plugin: 'maven-publish'
apply plugin: 'signing'
apply plugin: 'de.marcphilipp.nexus-publish'

publishing {
    publications {
        all {
            pom {
                url = 'https://github.com/xenit-eu/solr-backup'
                name = "solr-backup"
                description = project.description

                scm {
                    connection = 'scm:git:git@github.com:xenit-eu/solr-backup.git'
                    developerConnection = 'scm:git:git@github.com:xenit-eu/solr-backup.git'
                    url = 'https://github.com/xenit-eu/solr-backup.git'
                }
                developers {
                    developer {
                        id = "xenit"
                        name = "Xenit Solutions NV"
                    }
                }

                licenses {
                    license {
                        name = 'Apache License v2.0'
                        url = 'https://www.gnu.org/licenses/lgpl-3.0.txt'
                    }
                }
            }
        }
    }
}

nexusPublishing {
    repositories {
        sonatype {
            username = project.hasProperty('publish_username') ? project.publish_username : ''
            password = project.hasProperty('publish_password') ? project.publish_password : ''
        }
    }
}

afterEvaluate {
    signing {
        required { !version.endsWith('SNAPSHOT') && gradle.taskGraph.hasTask("publish") }
        sign publishing.publications
    }
}

gradle.taskGraph.whenReady { graph ->
    if (graph.hasTask(publish)) {
        if (!project.hasProperty('keyId') || !project.hasProperty('secretKeyRingFile') || !project.hasProperty('password')) {
            throw new GradleException('You need to provide signing params in order to sign artifacts')
        }

        def id = project.hasProperty('keyId') ? project.keyId : ''
        def file = project.hasProperty('secretKeyRingFile') ? project.secretKeyRingFile : ''
        def password = project.hasProperty('password') ? project.password : ''

        ext."signing.keyId" = id
        ext."signing.secretKeyRingFile" = file
        ext."signing.password" = password
    }
}
